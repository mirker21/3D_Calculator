/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.12 calculator_body.glb --transform --keepmeshes --keepmaterials 
Files: calculator_body.glb [56.37KB] > calculator_body-transformed.glb [6.51KB] (88%)
*/

import React, { useRef } from 'react'
import { useGLTF, Html } from '@react-three/drei'
import * as THREE from 'three';

export default function CalculatorBody(props) {
  const { nodes, materials } = useGLTF('./3D_Assets/calculator_body-transformed.glb')

  const displayPosition = new THREE.Vector3(-.88, .2, -3.08)
  return (
    <group {...props} dispose={null} position={[0, 0, 0]}>
      <Html
        position={displayPosition}
        rotation={[-Math.PI/2, 0, 0]}
        scale={[.75, 1.2, 1]}
        transform
        occlude
      >
        <h2>0123456789ldsfjadsfklfhaf;kdsjflsajlkfsd</h2>
      </Html>
      <mesh geometry={nodes.Body.geometry} material={materials.Calculator_Body} />
      <mesh geometry={nodes.Screen.geometry} material={materials.Screen} />
      <mesh geometry={nodes.Screen_Inner_Rim_And_Bottom_1.geometry} material={materials.Screen_Inner_Rim_And_Back} />
      <mesh geometry={nodes.Screen_Inner_Rim_And_Bottom_2.geometry} material={materials.Calculator_Body} />
    </group>
  )
}

useGLTF.preload('./3D_Assets/calculator_body-transformed.glb')
